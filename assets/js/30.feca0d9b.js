(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{318:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器渲染页面的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染页面的过程"}},[t._v("#")]),t._v(" 浏览器渲染页面的过程")]),t._v(" "),s("p",[t._v("浏览器渲染页面一般会经过以下几个主要过程：")]),t._v(" "),s("h2",{attrs:{id:"_1、解析html-构建dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、解析html-构建dom树"}},[t._v("#")]),t._v(" 1、解析HTML（构建DOM树）")]),t._v(" "),s("p",[t._v("当浏览器接收到一个网页的HTML文档时，首先会对其进行解析。")]),t._v(" "),s("p",[t._v("浏览器会按照HTML的语法规则，将HTML文档中的标签、属性、文本内容等逐个识别出来。 把这些元素按照它们在文档中的层级关系构建成一棵DOM（Document Object Model）树。")]),t._v(" "),s("p",[t._v("例如，一个简单的HTML页面结构如下：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("标题"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("段落内容"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("会被构建成一个包含"),s("code",[t._v("html")]),t._v("节点作为根节点，其下有"),s("code",[t._v("body")]),t._v("节点，"),s("code",[t._v("body")]),t._v("节点下又分别有"),s("code",[t._v("h1")]),t._v("和"),s("code",[t._v("p")]),t._v("节点等的DOM树。")]),t._v(" "),s("h2",{attrs:{id:"_2、解析css-构建cssom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、解析css-构建cssom树"}},[t._v("#")]),t._v(" 2、解析CSS（构建CSSOM树）")]),t._v(" "),s("p",[t._v("浏览器在解析HTML的同时或之后，会开始解析网页中的CSS样式表。")]),t._v(" "),s("p",[t._v("CSS样式表可以是通过"),s("code",[t._v("<link>")]),t._v("标签引入的外部样式表，也可以是在"),s("code",[t._v("<style>")]),t._v("标签内的内部样式表。")]),t._v(" "),s("p",[t._v("浏览器按照CSS的语法规则对样式进行解析，将样式规则根据选择器等进行分类整理，并构建出一棵CSSOM（CSS Object Model）树。")]),t._v(" "),s("p",[t._v("CSSOM树记录了页面中各个元素应该应用的样式信息。")]),t._v(" "),s("h2",{attrs:{id:"_3、合并dom树和cssom树-生成渲染树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、合并dom树和cssom树-生成渲染树"}},[t._v("#")]),t._v(" 3、合并DOM树和CSSOM树（生成渲染树）")]),t._v(" "),s("p",[t._v("在分别构建好DOM树和CSSOM树之后，浏览器会将这两棵树进行合并。")]),t._v(" "),s("p",[t._v("合并的过程主要是根据DOM树中的元素去CSSOM树中查找对应的样式信息，然后将元素及其样式信息组合在一起，形成一棵渲染树（Render Tree）。")]),t._v(" "),s("p",[t._v("渲染树中的节点只包含那些会在页面上实际显示出来的元素，比如"),s("code",[t._v("<head>")]),t._v("中的一些元素（如"),s("code",[t._v("<meta>")]),t._v("等）不会出现在渲染树中，因为它们通常不直接参与页面的可视呈现。")]),t._v(" "),s("h2",{attrs:{id:"_4、布局-计算布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、布局-计算布局"}},[t._v("#")]),t._v(" 4、布局（计算布局）")]),t._v(" "),s("p",[t._v("生成渲染树之后，浏览器需要对渲染树中的各个节点进行布局计算。")]),t._v(" "),s("p",[t._v("主要是确定每个节点在页面中的准确位置（如坐标、大小等）。")]),t._v(" "),s("p",[t._v("这涉及到根据父节点的布局属性以及自身的样式属性等来计算。")]),t._v(" "),s("p",[t._v("例如，如果一个"),s("code",[t._v("<div>")]),t._v("元素设置了宽度为"),s("code",[t._v("50%")]),t._v("且父元素的宽度已知，那么就可以计算出该"),s("code",[t._v("<div>")]),t._v("元素的具体宽度值。")]),t._v(" "),s("h2",{attrs:{id:"_5-绘制-渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-绘制-渲染"}},[t._v("#")]),t._v(" 5. 绘制（渲染）")]),t._v(" "),s("p",[t._v("在完成布局计算后，浏览器就开始进行绘制操作。")]),t._v(" "),s("p",[t._v("绘制就是按照已经确定的布局位置和样式，将渲染树中的各个节点依次绘制到屏幕上。")]),t._v(" "),s("p",[t._v("绘制过程会涉及到多个步骤，比如先绘制背景色、再绘制边框、最后绘制文本等内容，从而完成整个页面的可视呈现。")])])}),[],!1,null,null,null);s.default=e.exports}}]);